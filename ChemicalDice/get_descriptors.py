# -*- coding: utf-8 -*-
"""Chemdice_descriptor_calculation_tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gx-Ean1-zNORzDRFHaRreNvWRDf1zh0H
"""
"""
!pip install -q condacolab
import condacolab
condacolab.install()

!conda install conda-forge::openbabel
!conda install conda-forge::cpulimit

!pip install -i https://test.pypi.org/simple/ ChemicalDice==0.3.5
!pip install torch==2.2.1 torchvision==0.17.1 torchaudio==2.2.1 --index-url https://download.pytorch.org/whl/rocm5.7
!pip install multitasking==0.0.11 pandas==2.0.3 scikit-learn==1.2.2 seaborn==0.13.1 tqdm==4.66.4 xgboost==2.0.3
!pip install rdkit==2023.9.6 signaturizer==1.1.14 descriptastorus==2.6.1 mordred==0.6.0 tensorly==0.8.1 transformers==4.40.1
!pip install --upgrade tensorflow==2.15
"""
"""# Quick Start

To get started with ChemicalDice you can install the package by following the installation guide. You can use your own data containing smiles and their labels in a csv file. For example we can use free solvation data from moleculenet.
"""

import pandas as pd
from ChemicalDice import smiles_preprocess, bioactivity, chemberta, Grover, ImageMol, chemical, quantum
import os

def calculate_descriptors(args):
    # Read the CSV file
    df = pd.read_csv(args.input_filename)

    # Select the required columns and remove duplicates
    

    # Rename the columns
    df.columns = ['SMILES','labels']
    df = df.drop_duplicates(subset="SMILES")

    # Write the DataFrame to a new CSV file
    df.to_csv("input_data.csv", index=False)

    # Print the DataFrame
    print(df)
    input_wrong = True
    while input_wrong:
        user_ans = input("Start calculation (yes/no):")
        if user_ans=='yes':
            print("Calculating descriptors ....")
            smiles_preprocess.create_mol2_files(input_file = "input_data.csv")
            quantum.get_mopac_prerequisites()
            
            os.mkdir("data")
            quantum.descriptor_calculator(input_file = "input_data.csv", output_file="data/mopac.csv")
            smiles_preprocess.create_sdf_files(input_file = "input_data.csv")
            chemical.descriptor_calculator(input_file = "input_data.csv", output_file="data/mordred.csv")
            smiles_preprocess.add_canonical_smiles(input_file = "input_data.csv")
            chemberta.smiles_to_embeddings(input_file = "input_data.csv", output_file = "data/Chemberta.csv")
            bioactivity.calculate_descriptors(input_file = "input_data.csv", output_file = "data/Signaturizer.csv")
            ImageMol.image_to_embeddings(input_file = "input_data.csv", output_file_name="data/ImageMol.csv")
            Grover.get_embeddings(input_file = "input_data.csv",  output_file_name="data/Grover.csv")
            print("Descriptors calculation done path : data" )
        elif user_ans == 'no':
            input_wrong = False 
        else:
            pass
